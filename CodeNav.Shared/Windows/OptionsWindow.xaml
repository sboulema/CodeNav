<platform:DialogWindow
    x:Class="CodeNav.Windows.OptionsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:CodeNav.Models"
    mc:Ignorable="d"
    Title="CodeNav - Options"
    MinHeight="300"
    MinWidth="370"
    SizeToContent="WidthAndHeight"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    toolkit:Themes.UseVsTheme="True"
    >

    <Window.Resources>
        <ObjectDataProvider x:Key="marginSidesFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:MarginSideEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TabControl Background="Transparent">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Border>
                                    <Grid>
                                        <Border x:Name="border"
                                                    Background="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTabMouseOverBorderBrushKey}}">
                                            <ContentPresenter x:Name="cp" ContentSource="Header"
                                                        Margin="12,2,12,2"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border"
                                                Property="Background"
                                                Value="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTabMouseOverBorderBrushKey}}" />
                                        <Setter TargetName="cp"
                                                Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTabMouseOverTextBrushKey}}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="border"
                                                Property="Background"
                                                Value="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTabBorderBrushKey}}" />
                                        <Setter TargetName="cp"
                                                Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTabSelectedTextBrushKey}}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="border"
                                                Property="Background"
                                                Value="{DynamicResource {x:Static platform:EnvironmentColors.FileTabBorderBrushKey}}" />
                                        <Setter TargetName="cp"
                                                Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTabTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            
            <TabItem Header="General">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="0,0,5,0" 
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTextBrushKey}}">
                                Show CodeNav on this side of the code editor:
                            </TextBlock>
                            <ComboBox ItemsSource="{Binding Source={StaticResource marginSidesFromEnum}}" SelectedItem="{Binding MarginSide, Mode=TwoWay}" />
                        </StackPanel>

                        <CheckBox IsChecked="{Binding ShowFilterToolbar, Mode=TwoWay}" Margin="0,5">
                            Show the filter toolbar
                        </CheckBox>

                        <CheckBox IsChecked="{Binding ShowRegions, Mode=TwoWay}" Margin="0,5">
                            Show regions
                        </CheckBox>

                        <CheckBox IsChecked="{Binding UseXMLComments, Mode=TwoWay}" Margin="0,5">
                            Use XML comments for method tooltips
                        </CheckBox>

                        <CheckBox IsChecked="{Binding ShowHistoryIndicators, Mode=TwoWay}" Margin="0,5">
                            Show history/edit indicators
                        </CheckBox>

                        <CheckBox IsChecked="{Binding DisableHighlight, Mode=TwoWay}" Margin="0,5">
                            Disable auto-highlight
                        </CheckBox>

                        <CheckBox IsChecked="{Binding UpdateWhileTyping, Mode=TwoWay}" Margin="0,5">
                            Update CodeNav while typing
                        </CheckBox>

                        <StackPanel Orientation="Horizontal" Margin="0,5">
                            <TextBlock Margin="0,0,5,0"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTextBrushKey}}">
                                Do not auto load CodeNav for files with more than X lines:
                            </TextBlock>
                            <TextBox Text="{Binding AutoLoadLineThreshold, Mode=TwoWay}"></TextBox>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Fonts &amp; Colors">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock Margin="0,0,5,0" Foreground="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTextBrushKey}}">
                        Font:
                        </TextBlock>
                        <Button Click="ShowFontDialog">
                            Choose font...
                        </Button>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock Margin="0,0,5,0" Foreground="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTextBrushKey}}">
                        Highlight background:
                        </TextBlock>
                        <Button Click="ShowHighlightColorDialog" Background="{Binding HighlightBrush}">
                            Choose color...
                        </Button>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock Margin="0,0,5,0" Foreground="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTextBrushKey}}">
                        Window background:
                        </TextBlock>
                        <Button Click="ShowBackgroundColorDialog" Background="{Binding BackgroundBrush}">
                            Choose color...
                        </Button>
                    </StackPanel>
                </StackPanel>
            </TabItem>
        </TabControl>

        <Grid Grid.Row="1" Margin="0,5,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button Click="ResetClick">
                    Reset
                </Button>

                <Button Grid.Column="2" Click="OkClick" Margin="0,0,5,0">
                    Ok
                </Button>

                <Button Grid.Column="3" Click="CancelClick">
                    Cancel
                </Button>
            </Grid>
        </Grid>
    </Grid>
    
</platform:DialogWindow>