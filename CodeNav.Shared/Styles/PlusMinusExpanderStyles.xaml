<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
                    xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
                    xmlns:vsShell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Menus/ItemContextMenu.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <imaging:CrispImage x:Name="arrow" Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Expand}" Visibility="{Binding Path=HasMembersVisibility}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=DataContext.HasMembersVisibility, RelativeSource={RelativeSource Self}}" Value="Visible"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Moniker" TargetName="arrow" Value="{x:Static catalog:KnownMonikers.Collapse}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Moniker" TargetName="arrow" Value="{x:Static catalog:KnownMonikers.Expand}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlusMinusExpander" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" SnapsToDevicePixels="true" >
                        <StackPanel Orientation="Vertical">
                            <Grid Background="Transparent" SnapsToDevicePixels="False" ContextMenu="{StaticResource ItemContextMenu}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="17"/>
                                </Grid.ColumnDefinitions>

                                <Border BorderThickness="0" x:Name="ExpanderHeaderBorder">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowBorderColorKey}}" Offset="0.0" />
                                            <GradientStop Color="Transparent" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Button ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                            Content="{TemplateBinding Header}"
                                            Padding="{TemplateBinding Padding}"
                                            Foreground="{TemplateBinding Foreground}"
                                            FontWeight="{TemplateBinding FontWeight}"
                                            FontStyle="{TemplateBinding FontStyle}"
                                            FontStretch="{TemplateBinding FontStretch}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            HorizontalContentAlignment="Left"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" 
                                            DockPanel.Dock="Top"
                                            BorderThickness="0"
                                            Margin="4,0,0,0">
                                        <Button.InputBindings>
                                            <MouseBinding
                                                Gesture="LeftClick"
                                                Command="{Binding Path=ClickItemCommand}"
                                                CommandParameter="{Binding StartLinePosition}" />
                                            <MouseBinding
                                                Gesture="LeftDoubleClick"
                                                Command="{Binding Path=ToggleIsExpandedCommand}" />
                                        </Button.InputBindings>
                                    </Button>
                                </Border>
                                
                                <ToggleButton 
                                    Grid.Column="1" 
                                    x:Name="HeaderSite" 
                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                    Margin="1" 
                                    MinWidth="0" 
                                    MinHeight="0" 
                                    Style="{StaticResource ExpanderDownHeaderStyle}" 
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ContentPresenter 
                                x:Name="ExpandSite" 
                                DockPanel.Dock="Bottom" 
                                Focusable="false" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="{TemplateBinding Padding}" 
                                Visibility="Collapsed" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=DataContext.HasMembersVisibility, RelativeSource={RelativeSource Self}}" Value="Visible"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            <Setter Property="BorderThickness" TargetName="ExpanderHeaderBorder" Value="0,0,0,1" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="BorderThickness" TargetName="ExpanderHeaderBorder" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>